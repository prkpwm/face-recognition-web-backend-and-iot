{"ast":null,"code":"var _jsxFileName = \"/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/Checkupdate/Checkupdate.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { Switch } from 'antd';\nimport 'antd/dist/antd.css';\nimport './checkupdate.scss';\nlibrary.add(fas); // let word = {'':{'EN':'','TH':''},\n//         }\n\nlet word = {\n  'Check for update': {\n    'EN': 'Check for update',\n    'TH': ''\n  },\n  'Check': {\n    'EN': 'Check',\n    'TH': ''\n  },\n  'Scanner Ver.': {\n    'EN': 'Scanner Ver.',\n    'TH': ''\n  },\n  'Last update': {\n    'EN': '',\n    'TH': ''\n  }\n};\n\nclass Checkupdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"TH\",\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    GetLanguage() // Get language for display\n    .then(_Edit => {\n      if (_Edit.data.status) {\n        setTimeout(() => {\n          this.setState({\n            loading: false\n          });\n        }, 800);\n        this.setState({\n          language: _Edit.data.msg[0].lang\n        });\n      }\n    }).catch(_EditError => {\n      window.location.href = \"/password\";\n    });\n  }\n\n  onChange(checked) {\n    console.log(`switch to ${checked}`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"size-web\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hmenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/menu\",\n      className: \"link-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: ['fas', 'less-than'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 71\n      }\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"hd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, this, \"Check for update\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxset topbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-ta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"txth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \"Check for update\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnac\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary btn-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, \"Check\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-ta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"txth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"Scanner Ver.000\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnac\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lastup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Last update 00/00/0000\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-ta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"txth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"Check for update\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnac\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      className: \"switcho\",\n      defaultChecked: true,\n      onChange: e => this.onChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nexport default Checkupdate;","map":{"version":3,"sources":["/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/Checkupdate/Checkupdate.jsx"],"names":["React","FontAwesomeIcon","library","fas","far","Switch","add","word","Checkupdate","Component","constructor","props","state","language","loading","componentDidMount","setState","GetLanguage","then","_Edit","data","status","setTimeout","msg","lang","catch","_EditError","window","location","href","onChange","checked","console","log","render","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { Switch } from 'antd';\nimport 'antd/dist/antd.css';\nimport './checkupdate.scss'\n\n\n\nlibrary.add(fas)\n\n\n\n// let word = {'':{'EN':'','TH':''},\n\n//         }\n\nlet word = {'Check for update':{'EN':'Check for update','TH':''},\n            'Check':{'EN':'Check','TH':''},\n            'Scanner Ver.':{'EN':'Scanner Ver.','TH':''},\n            'Last update':{'EN':'','TH':''},\n\n        }\n\nclass Checkupdate extends React.Component {\n\n    constructor(props) {\n\n        super(props)\n        this.state = {\n            language:\"TH\",\n            loading: true\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        GetLanguage() // Get language for display\n            .then(_Edit => {\n                \n\n                if (_Edit.data.status) {\n\n                    setTimeout(() => {\n                        this.setState({\n                            loading: false\n                        })\n                      }, 800);\n                    this.setState({\n                        language: _Edit.data.msg[0].lang,\n                        \n                    })\n\n\n                }\n            })\n\n            .catch(_EditError => {\n                window.location.href = \"/password\";\n            })\n    }\n\n    onChange(checked) {\n        console.log(`switch to ${checked}`);\n    }\n\n\n    render() {\n\n\n\n\n\n        return (\n            <div>\n                <div className=\"size-web\">\n                    <div className=\"cov-menu\">\n                        <div className=\"hmenu\">\n                            <div className=\"icon-back\">\n                                <a href=\"/menu\" className=\"link-back\"><FontAwesomeIcon icon={['fas', 'less-than']} /></a>\n                            </div>\n                            <h1 className=\"hd\">{this}Check for update</h1>\n                        </div>\n                        <div className=\"boxset topbox\">\n                            <div className=\"cov-ta\">\n                                <div className=\"txth\">\n                                    <p className=\"txt\">Check for update</p>\n                                </div>\n                                <div className=\"btnac\">\n                                    <button type=\"button\" className=\"btn btn-secondary btn-check\">Check</button>\n                                </div>\n                            </div>\n\n                            <div className=\"cov-ta\">\n                                <div className=\"txth\">\n                                    <p className=\"txt\">Scanner Ver.000</p>\n                                </div>\n                                <div className=\"btnac\">\n                                    <p className=\"lastup\">Last update 00/00/0000</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"boxset\">\n                            <div className=\"cov-ta\">\n                                <div className=\"txth\">\n                                    <p className=\"txt\">Check for update</p>\n                                </div>\n                                <div className=\"btnac\">\n                                    <Switch className=\"switcho\" defaultChecked onChange={(e) => this.onChange(e)} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n\n\n}\n\nexport default Checkupdate"]},"metadata":{},"sourceType":"module"}