{"ast":null,"code":"var _jsxFileName = \"/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/Setting/Sound.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { Slider, InputNumber, Upload, message, Button, Switch } from 'antd';\nimport 'antd/dist/antd.css';\nimport './sound.scss';\nimport { selectStatusSound, setStatusSound, uploadVoiceFile, uploadVoiceEffect, getVoiceMaster, setVoiceMaster } from \"../../services/APIs/sound\";\nimport { GetLanguage, SetLanguage } from \"../../services/APIs/Setting\";\nlibrary.add(fas);\nlet word = {\n  'Setting': {\n    'EN': 'Setting',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Sound': {\n    'EN': 'Sound',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Master Volume': {\n    'EN': 'Master Volume',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Thai': {\n    'EN': 'Thai',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Voice': {\n    'EN': 'Voice',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Sound Effect': {\n    'EN': 'Sound Effect',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Upload': {\n    'EN': 'Upload',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Voice feedback': {\n    'EN': 'Voice feedback',\n    'TH': 'เสร็จแล้ว'\n  }\n};\n\nclass Sound extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = value => {\n      this.setState({\n        inputValue: value\n      });\n      setVoiceMaster(value).then(_welcomeWord => {\n        if (_welcomeWord.data.status) {\n          message.success({\n            content: word['Done'][this.state.language],\n            className: 'message-done',\n            style: {\n              marginTop: '2vh'\n            }\n          });\n        } else {\n          message.error({\n            content: word['Please try again.'][this.state.language],\n            className: 'message-alert',\n            style: {\n              marginTop: '2vh'\n            }\n          });\n        }\n      }).catch(_StatusFaceError => console.error(_StatusFaceError));\n    };\n\n    this.handleChange_effect_voice = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      setTimeout(async () => {\n        const isLt2M = info.file.size / 1024 / 1024 < 2;\n\n        if (isLt2M && (info.file.type === 'audio/mpeg' || info.file.type === 'audio/x-wav')) {\n          info.file.status = 'done';\n        } else {\n          info.file.status = 'error';\n        }\n\n        if (info.file.status === \"done\") {\n          // Get this url from response in real world.\n          console.log('img----', info.file.originFileObj);\n          this.setState({\n            loading: false,\n            soundEffect: info.file.originFileObj\n          });\n          const res = await uploadVoiceEffect({\n            soundEffects: this.state.soundEffect\n          });\n          console.log('res---> ', res);\n\n          if (res.data.status) {\n            message.success({\n              content: word['Done'][this.state.language],\n              className: 'message-done',\n              style: {\n                marginTop: '2vh'\n              }\n            });\n          } else {\n            message.error({\n              content: word['Please try again.'][this.state.language],\n              className: 'message-alert',\n              style: {\n                marginTop: '2vh'\n              }\n            });\n          }\n        }\n      }, 1000);\n    };\n\n    this.handleChange_voice = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      setTimeout(async () => {\n        const isLt2M = info.file.size / 1024 / 1024 < 2;\n\n        if (isLt2M && (info.file.type === 'audio/mpeg' || info.file.type === 'audio/x-wav')) {\n          info.file.status = 'done';\n        } else {\n          info.file.status = 'error';\n        }\n\n        if (info.file.status === \"done\") {\n          // Get this url from response in real world.\n          console.log('img----', info.file.originFileObj);\n          this.setState({\n            loading: false,\n            soundFile: info.file.originFileObj\n          });\n          const res = await uploadVoiceFile({\n            soundVoice: this.state.soundFile\n          });\n          console.log('res---> ', res);\n\n          if (res.data.status) {\n            message.success({\n              content: word['Done'][this.state.language],\n              className: 'message-done',\n              style: {\n                marginTop: '2vh'\n              }\n            });\n          } else {\n            message.error({\n              content: word['Please try again.'][this.state.language],\n              className: 'message-alert',\n              style: {\n                marginTop: '2vh'\n              }\n            });\n          }\n        }\n      }, 1000);\n    };\n\n    this.state = {\n      language: 'TH',\n      inputValue: 0,\n      loading: false,\n      loading_page: false,\n      statusSound: true,\n      soundFile: undefined,\n      soundEffect: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading_page: true\n    }); // get data from mongodb\n\n    selectStatusSound().then(_Sound => {\n      // console.log(\"_Sound.data.msg:\",_Sound.data.msg[0].statusSound)\n      if (_Sound.data.status) {\n        setTimeout(() => {\n          this.setState({\n            loading_page: false\n          });\n        }, 800);\n        this.setState({\n          statusSound: _Sound.data.msg[0].statusSound\n        });\n      }\n    }).catch(_DisplayError => {\n      window.location.href = \"/password\";\n    }); // inputValue\n\n    getVoiceMaster().then(_SoundMaster => {\n      // console.log(\"_SoundMaster.data.msg[0]:\",_SoundMaster.data.msg)\n      // console.log(_SoundMaster.data);\n      if (_SoundMaster.data.status) {\n        setTimeout(() => {\n          this.setState({\n            loading_page: false\n          });\n        }, 800);\n        this.setState({\n          inputValue: _SoundMaster.data.msg\n        });\n      }\n    }).catch(errorVoice => {\n      // console.log(errorVoice[0])\n      window.location.href = \"/password\";\n    });\n    GetLanguage() // Get language for display\n    .then(_Edit => {\n      if (_Edit.data.status) {\n        this.setState({\n          language: _Edit.data.msg[0].lang\n        });\n      }\n    }); // print log status sound\n    // console.log(this.state.statusSound)\n  }\n\n  onChangevoice(checked) {\n    // console.log(`switch to ${checked}`);\n    this.setState({\n      statusSound: checked\n    });\n    setStatusSound(checked).then(_statusSound => {\n      if (_statusSound.data.status) {\n        message.success({\n          content: word['Done'][this.state.language],\n          className: 'message-done',\n          style: {\n            marginTop: '2vh'\n          }\n        });\n      } else {\n        message.error({\n          content: word['Please try again.'][this.state.language],\n          className: 'message-alert',\n          style: {\n            marginTop: '2vh'\n          }\n        });\n      }\n    }).catch(_StatusFaceError => console.error(_StatusFaceError));\n  }\n\n  render() {\n    // console.log(this.state.statusSound)\n    console.log(this.state.inputValue);\n    const {\n      inputValue\n    } = this.state;\n    const props_voice = {\n      name: 'file',\n      headers: {\n        authorization: 'authorization-text'\n      },\n      onChange: this.handleChange_voice\n    };\n    const props_effect = {\n      name: 'file',\n      headers: {\n        authorization: 'authorization-text'\n      },\n      onChange: this.handleChange_effect_voice\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"size-web\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hmenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/setting\",\n      className: \"link-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: ['fas', 'less-than'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 74\n      }\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"hd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, word['Done'][this.state.language], \"Sound\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set-sound\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"master-volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, word['Done'][this.state.language], \"Master Volume\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      tipFormatter: null,\n      min: 0,\n      max: 10,\n      onChange: this.onChange,\n      value: typeof inputValue === 'number' ? inputValue : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      min: 0,\n      max: 10,\n      value: inputValue,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"voice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }\n    }, word['Done'][this.state.language], \"Voice\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 45\n      }\n    }, word['Done'][this.state.language], \"Thai\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, props_voice, {\n      fileList: this.state.fileList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 49\n      }\n    }, word['Done'][this.state.language], \"Upload\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sound-effect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }, word['Done'][this.state.language], \"Sound Effect\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 45\n      }\n    }, word['Bell'][this.state.language])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, props_effect, {\n      fileList: this.state.fileList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 49\n      }\n    }, word['Upload'][this.state.language])))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"voice-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }, word['Voice feedback'][this.state.language]), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxsetfeed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"switchset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      className: \"switcho\",\n      defaultChecked: true,\n      checked: this.state.statusSound,\n      onChange: e => this.onChangevoice(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 41\n      }\n    }))))))));\n  }\n\n}\n\nexport default Sound;","map":{"version":3,"sources":["/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/Setting/Sound.jsx"],"names":["React","FontAwesomeIcon","library","fas","far","Slider","InputNumber","Upload","message","Button","Switch","selectStatusSound","setStatusSound","uploadVoiceFile","uploadVoiceEffect","getVoiceMaster","setVoiceMaster","GetLanguage","SetLanguage","add","word","Sound","Component","constructor","props","onChange","value","setState","inputValue","then","_welcomeWord","data","status","success","content","state","language","className","style","marginTop","error","catch","_StatusFaceError","console","handleChange_effect_voice","info","file","loading","setTimeout","isLt2M","size","type","log","originFileObj","soundEffect","res","soundEffects","handleChange_voice","soundFile","soundVoice","loading_page","statusSound","undefined","componentDidMount","_Sound","msg","_DisplayError","window","location","href","_SoundMaster","errorVoice","_Edit","lang","onChangevoice","checked","_statusSound","render","props_voice","name","headers","authorization","props_effect","fileList","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { Slider, InputNumber, Upload, message, Button, Switch } from 'antd';\nimport 'antd/dist/antd.css';\nimport './sound.scss'\nimport {selectStatusSound, setStatusSound, uploadVoiceFile ,uploadVoiceEffect, getVoiceMaster, setVoiceMaster} from \"../../services/APIs/sound\"\nimport { GetLanguage, SetLanguage } from \"../../services/APIs/Setting\";\n\nlibrary.add(fas)\n\nlet word = {\n    'Setting': { 'EN': 'Setting', 'TH': 'เสร็จแล้ว' },\n    'Sound': { 'EN': 'Sound', 'TH': 'เสร็จแล้ว' },\n    'Master Volume': { 'EN': 'Master Volume', 'TH': 'เสร็จแล้ว' },\n    'Thai': { 'EN': 'Thai', 'TH': 'เสร็จแล้ว' },\n    'Voice': { 'EN': 'Voice', 'TH': 'เสร็จแล้ว' },\n    'Sound Effect': { 'EN': 'Sound Effect', 'TH': 'เสร็จแล้ว' },\n    'Upload': { 'EN': 'Upload', 'TH': 'เสร็จแล้ว' },\n    'Voice feedback': { 'EN': 'Voice feedback', 'TH': 'เสร็จแล้ว' },\n\n\n}\n\nclass Sound extends React.Component {\n\n    constructor(props) {\n\n        super(props)\n        this.state = {\n            language: 'TH',\n            inputValue: 0,\n            loading: false,\n            loading_page: false,\n            statusSound: true,\n            soundFile:undefined,\n            soundEffect:undefined\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            loading_page: true\n        })\n        // get data from mongodb\n        selectStatusSound()\n        .then(_Sound => {\n            // console.log(\"_Sound.data.msg:\",_Sound.data.msg[0].statusSound)\n            if (_Sound.data.status) {\n\n                setTimeout(() => {\n                    this.setState({\n                        loading_page: false\n                    })\n                }, 800);\n                this.setState({\n                    statusSound: _Sound.data.msg[0].statusSound,\n                })\n\n            }\n        })\n        .catch(_DisplayError => {\n            window.location.href = \"/password\";\n        })\n        // inputValue\n        getVoiceMaster()\n        .then(_SoundMaster => {\n            // console.log(\"_SoundMaster.data.msg[0]:\",_SoundMaster.data.msg)\n            // console.log(_SoundMaster.data);\n            if (_SoundMaster.data.status) {\n\n                setTimeout(() => {\n                    this.setState({\n                        loading_page: false\n                    })\n                }, 800);\n                this.setState({\n                    inputValue: _SoundMaster.data.msg,\n                })\n\n            }\n        })\n        .catch(errorVoice => {\n            // console.log(errorVoice[0])\n            window.location.href = \"/password\";\n        })\n        GetLanguage() // Get language for display\n        .then(_Edit => {\n            if (_Edit.data.status) {\n                this.setState({\n                    language: _Edit.data.msg[0].lang,\n                })\n            }\n        })\n\n        // print log status sound\n        // console.log(this.state.statusSound)\n    }\n\n    onChange = value => {\n        this.setState({\n            inputValue: value,\n        });\n\n        setVoiceMaster(value)\n        .then(_welcomeWord => {\n            if(_welcomeWord.data.status){\n                message.success({\n                    content: word['Done'][this.state.language],\n                    className: 'message-done',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n            }else{\n                message.error({\n                    content: word['Please try again.'][this.state.language],\n                    className: 'message-alert',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n            }\n        })\n        .catch(_StatusFaceError => console.error(_StatusFaceError))\n    };\n\n\n    handleChange_effect_voice = (info) =>{\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n\n        setTimeout(async () => {\n            const isLt2M = info.file.size / 1024 / 1024 < 2;\n            if (isLt2M && (info.file.type === 'audio/mpeg' || info.file.type === 'audio/x-wav')) {\n              info.file.status = 'done'\n            } else {\n              info.file.status = 'error'\n            }\n            if (info.file.status === \"done\") {\n              // Get this url from response in real world.\n              console.log('img----',info.file.originFileObj)\n              this.setState({\n                  loading: false,\n                  soundEffect:info.file.originFileObj\n              })\n              \n              const res = await uploadVoiceEffect({\n                  soundEffects:this.state.soundEffect\n              })\n              console.log('res---> ', res)\n              if(res.data.status){\n                  message.success({\n                      content: word['Done'][this.state.language],\n                      className: 'message-done',\n                      style: {\n                          marginTop: '2vh',\n                      },\n                  });\n                  \n              }else{\n                  message.error({\n                      content: word['Please try again.'][this.state.language],\n                      className: 'message-alert',\n                      style: {\n                          marginTop: '2vh',\n                      },\n                  });\n              }\n            }\n          }, 1000) \n    }\n\n\n    handleChange_voice = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n\n        setTimeout(async () => {\n          const isLt2M = info.file.size / 1024 / 1024 < 2;\n          if (isLt2M && (info.file.type === 'audio/mpeg' || info.file.type === 'audio/x-wav')) {\n            info.file.status = 'done'\n          } else {\n            info.file.status = 'error'\n          }\n          if (info.file.status === \"done\") {\n            // Get this url from response in real world.\n            console.log('img----',info.file.originFileObj)\n            this.setState({\n                loading: false,\n                soundFile:info.file.originFileObj\n            })\n            \n            const res = await uploadVoiceFile({\n                soundVoice:this.state.soundFile\n            })\n            console.log('res---> ', res)\n            if(res.data.status){\n                message.success({\n                    content: word['Done'][this.state.language],\n                    className: 'message-done',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n                \n            }else{\n                message.error({\n                    content: word['Please try again.'][this.state.language],\n                    className: 'message-alert',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n            }\n          }\n        }, 1000)    \n    }\n\n\n    onChangevoice(checked) {\n        // console.log(`switch to ${checked}`);\n        this.setState({\n            statusSound:checked\n        })\n\n        setStatusSound(checked)\n        .then(_statusSound => {\n            if(_statusSound.data.status){\n                message.success({\n                    content: word['Done'][this.state.language],\n                    className: 'message-done',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n            }else{\n                message.error({\n                    content: word['Please try again.'][this.state.language],\n                    className: 'message-alert',\n                    style: {\n                        marginTop: '2vh',\n                    },\n                });\n            }\n        })\n        .catch(_StatusFaceError => console.error(_StatusFaceError))\n    }\n\n\n    render() {\n\n        // console.log(this.state.statusSound)\n        console.log(this.state.inputValue);\n\n        const { inputValue } = this.state;\n\n\n\n        const props_voice = {\n            name: 'file',\n            headers: {\n                authorization: 'authorization-text',\n            },\n            onChange: this.handleChange_voice,\n\n        };\n\n        const props_effect = {\n            name: 'file',\n            headers: {\n                authorization: 'authorization-text',\n            },\n            onChange: this.handleChange_effect_voice,\n        };\n\n        return (\n            <div>\n                <div className=\"size-web\">\n                    <div className=\"cov-menu\">\n                        <div className=\"hmenu\">\n                            <div className=\"icon-back\">\n                                <a href=\"/setting\" className=\"link-back\"><FontAwesomeIcon icon={['fas', 'less-than']} /></a>\n                            </div>\n                            <h1 className=\"hd\">{word['Done'][this.state.language]}Sound</h1>\n                        </div>\n                        <div className=\"set-sound\">\n                            <div className=\"master-volume\">\n                                <p className=\"name\">{word['Done'][this.state.language]}Master Volume</p>\n                                <div className=\"box-volume\">\n                                    <div className=\"volume\">\n                                        <div className=\"slide\">\n                                            <Slider\n                                                tipFormatter={null}\n                                                min={0}\n                                                max={10}\n                                                onChange={this.onChange}\n                                                value={typeof inputValue === 'number' ? inputValue : 0}\n                                            /></div>\n                                    </div>\n                                    <div className=\"num\">\n                                        <InputNumber\n                                            min={0}\n                                            max={10}\n                                            value={inputValue}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"voice\">\n                                <p className=\"name\">{word['Done'][this.state.language]}Voice</p>\n                                <div className=\"box-upload\">\n                                    <div className=\"cov-upload\">\n                                        <div className=\"name-file\">\n                                            <p className=\"name\">{word['Done'][this.state.language]}Thai</p>\n                                        </div>\n                                        <div className=\"btn-up\">\n                                            <Upload {...props_voice} fileList={this.state.fileList}>\n                                                <Button>{word['Done'][this.state.language]}Upload</Button>\n                                            </Upload>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"sound-effect\">\n                                <p className=\"name\">{word['Done'][this.state.language]}Sound Effect</p>\n                                <div className=\"box-upload\">\n                                    <div className=\"cov-upload\">\n                                        <div className=\"name-file\">\n                                            <p className=\"name\">{word['Bell'][this.state.language]}</p>\n                                        </div>\n                                        <div className=\"btn-up\">\n                                            <Upload {...props_effect} fileList={this.state.fileList}>\n                                                <Button>{word['Upload'][this.state.language]}</Button>\n                                            </Upload>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"voice-feedback\">\n                                <p className=\"name\">{word['Voice feedback'][this.state.language]}</p>\n                                <div className=\"boxsetfeed\">\n                                    <div className=\"switchset\">\n                                        <Switch className=\"switcho\" defaultChecked checked={this.state.statusSound} onChange={(e) => this.onChangevoice(e)} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n\n\n}\n\nexport default Sound"]},"metadata":{},"sourceType":"module"}