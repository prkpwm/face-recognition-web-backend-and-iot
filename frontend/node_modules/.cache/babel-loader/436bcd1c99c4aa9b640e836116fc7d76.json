{"ast":null,"code":"var _jsxFileName = \"/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/SettingPassword/SettingPassword.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { message } from 'antd';\nimport { CehckOldPassword, UpdatePassword } from \"../../services/APIs/Setting\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport './settingpassword.scss';\nimport { GetLanguage, SetLanguage } from \"../../services/APIs/Setting\";\nlet word = {\n  'Password Setting': {\n    'EN': 'Password Setting',\n    'TH': 'การตั้งค่ารหัสผ่าน'\n  },\n  'Old Password': {\n    'EN': 'Old Password',\n    'TH': 'รหัสผ่านเก่า'\n  },\n  'New Password': {\n    'EN': 'New Password',\n    'TH': 'รหัสผ่านใหม่'\n  },\n  'Confirm Password': {\n    'EN': 'Confirm Password',\n    'TH': 'ยืนยันรหัสผ่าน'\n  },\n  'Save': {\n    'EN': 'Save',\n    'TH': 'บันทึก'\n  },\n  'The password is less than 8 characters.': {\n    'EN': 'Save',\n    'TH': 'รหัสผ่านมีความยาวน้อยกว่า 8 ตัวอักษร'\n  },\n  'Done': {\n    'EN': 'Save',\n    'TH': 'เสร็จแล้ว'\n  },\n  'Not Change Password': {\n    'EN': 'Save',\n    'TH': 'ไม่เปลี่ยนรหัสผ่าน'\n  }\n};\nlibrary.add(fas);\n\nclass SettingPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"TH\",\n      old_password: \"\",\n      new_password: \"\",\n      confirm_password: \"\",\n      status_checkold_password: null,\n      visible_newpass: true,\n      valid_confirmpassword: null,\n      disabled_btn_save: true,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    GetLanguage() // Get language for display\n    .then(_Edit => {\n      if (_Edit.data.status) {\n        setTimeout(() => {\n          this.setState({\n            loading: false\n          });\n        }, 800);\n        this.setState({\n          language: _Edit.data.msg[0].lang\n        });\n      }\n    });\n  }\n\n  OnChangeOldPassword(e) {\n    // check old password\n    console.log(e.target.value);\n    var value = e.target.value;\n    this.setState({\n      old_password: e.target.value\n    });\n    this.CheckOldPass(value);\n  }\n\n  OnChangeNewPassword(e) {\n    // new password\n    this.setState({\n      new_password: e.target.value\n    });\n  }\n\n  OnChangeConfirmPassword(e) {\n    // confirm password\n    var confirm = e.target.value;\n    this.setState({\n      confirm_password: e.target.value\n    });\n\n    if (confirm != this.state.new_password) {\n      this.setState({\n        valid_confirmpassword: true\n      });\n    } else {\n      this.setState({\n        valid_confirmpassword: false,\n        disabled_btn_save: false\n      });\n    }\n  }\n\n  CheckOldPass(value) {\n    if (value.length >= 8) {\n      CehckOldPassword(value).then(_Oldpass => {\n        if (_Oldpass.data.status) {\n          this.setState({\n            status_checkold_password: _Oldpass.data.status,\n            visible_newpass: false\n          });\n        } else {\n          this.setState({\n            status_checkold_password: _Oldpass.data.status,\n            visible_newpass: true\n          });\n        }\n      }).catch(_OldpassError => console.error(_OldpassError));\n    }\n  }\n\n  SaveNewPassword() {\n    // Update Password\n    // console.log(this.state.new_password.length) \n    if (this.state.new_password.length < 8) {\n      this.setState({\n        new_password: \"\",\n        confirm_password: \"\",\n        valid_confirmpassword: null\n      });\n      message.error({\n        content: word['The password is less than 8 characters.'][this.state.language],\n        className: 'message-alert',\n        // duration: 200,\n        style: {\n          marginTop: '8vh'\n        }\n      });\n    } else {\n      UpdatePassword(this.state.new_password).then(_StatusUpdate => {\n        console.log(\"GFOL\", _StatusUpdate);\n\n        if (_StatusUpdate.data.status) {\n          message.success({\n            content: word['Done'][this.state.language],\n            className: 'message-done',\n            // duration: 500,\n            style: {\n              marginTop: '2vh'\n            }\n          });\n          localStorage.removeItem(\"_Token\");\n          setTimeout(function () {\n            window.location.href = \"/password\";\n          }, 200);\n        } else {\n          message.error({\n            content: word['Not Change Password'][this.state.language],\n            className: 'message-alert',\n            // duration: 200,\n            style: {\n              marginTop: '5vh'\n            }\n          });\n        }\n      }).catch(_StatusUpdateError => console.error(_StatusUpdateError));\n    }\n  }\n\n  render() {\n    // console.log(this.state.status_checkold_password)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"size-web\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hmenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/menu\",\n      className: \"link-back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: ['fas', 'less-than'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 71\n      }\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"hd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, word['Password Setting'][this.state.language])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-inputset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-old\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"la-pass\",\n      htmlFor: \"Oldpass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, word['Old Password'][this.state.language]), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"8\",\n      onChange: e => {\n        this.OnChangeOldPassword(e);\n      },\n      value: this.state.old_password,\n      className: \"form-control input-data\",\n      id: \"Oldpass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-status \" + (this.state.status_checkold_password == true ? \"green\" : this.state.status_checkold_password == false ? \"red\" : null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"la-pass\",\n      htmlFor: \"Newpass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, word['New Password'][this.state.language]), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control input-data\",\n      maxLength: \"8\",\n      value: this.state.new_password,\n      onChange: e => {\n        this.OnChangeNewPassword(e);\n      },\n      id: \"Newpass\",\n      disabled: this.state.visible_newpass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"la-pass old\",\n      htmlFor: \"Confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, word['Confirm Password'][this.state.language]), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"8\",\n      value: this.state.confirm_password,\n      onChange: e => {\n        this.OnChangeConfirmPassword(e);\n      },\n      className: \"form-control input-data\",\n      id: \"Confirm\",\n      disabled: this.state.visible_newpass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-status \" + (this.state.valid_confirmpassword == true ? \"red\" : this.state.valid_confirmpassword == false ? \"green\" : null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cov-save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-save\",\n      onClick: () => {\n        this.SaveNewPassword();\n      },\n      disabled: this.state.disabled_btn_save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, word['Save'][this.state.language]))))));\n  }\n\n}\n\nexport default SettingPassword;","map":{"version":3,"sources":["/home/recognition/Desktop/face-recognition-web-backend-and-iot/frontend/src/components/SettingPassword/SettingPassword.jsx"],"names":["React","FontAwesomeIcon","library","message","CehckOldPassword","UpdatePassword","fas","far","GetLanguage","SetLanguage","word","add","SettingPassword","Component","constructor","props","state","language","old_password","new_password","confirm_password","status_checkold_password","visible_newpass","valid_confirmpassword","disabled_btn_save","loading","componentDidMount","setState","then","_Edit","data","status","setTimeout","msg","lang","OnChangeOldPassword","e","console","log","target","value","CheckOldPass","OnChangeNewPassword","OnChangeConfirmPassword","confirm","length","_Oldpass","catch","_OldpassError","error","SaveNewPassword","content","className","style","marginTop","_StatusUpdate","success","localStorage","removeItem","window","location","href","_StatusUpdateError","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { message } from 'antd';\nimport { CehckOldPassword, UpdatePassword } from \"../../services/APIs/Setting\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport './settingpassword.scss'\nimport { GetLanguage, SetLanguage } from \"../../services/APIs/Setting\";\nlet word = {\n    'Password Setting': { 'EN': 'Password Setting', 'TH': 'การตั้งค่ารหัสผ่าน' },\n    'Old Password': { 'EN': 'Old Password', 'TH': 'รหัสผ่านเก่า' },\n    'New Password': { 'EN': 'New Password', 'TH': 'รหัสผ่านใหม่' },\n    'Confirm Password': { 'EN': 'Confirm Password', 'TH': 'ยืนยันรหัสผ่าน' },\n    'Save': { 'EN': 'Save', 'TH': 'บันทึก' },\n    'The password is less than 8 characters.': { 'EN': 'Save', 'TH': 'รหัสผ่านมีความยาวน้อยกว่า 8 ตัวอักษร' },\n    'Done': { 'EN': 'Save', 'TH': 'เสร็จแล้ว' },\n    'Not Change Password': { 'EN': 'Save', 'TH': 'ไม่เปลี่ยนรหัสผ่าน' },\n}\n\nlibrary.add(fas)\n\nclass SettingPassword extends React.Component {\n\n    constructor(props) {\n\n        super(props)\n        this.state = {\n            language: \"TH\",\n            old_password: \"\",\n            new_password: \"\",\n            confirm_password: \"\",\n            status_checkold_password: null,\n            visible_newpass: true,\n            valid_confirmpassword: null,\n            disabled_btn_save: true,\n            loading: true\n        }\n\n    }\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        GetLanguage() // Get language for display\n            .then(_Edit => {\n\n                if (_Edit.data.status) {\n\n                    setTimeout(() => {\n                        this.setState({\n                            loading: false\n                        })\n                    }, 800);\n                    this.setState({\n                        language: _Edit.data.msg[0].lang,\n\n                    })\n\n\n                }\n            })\n\n\n    }\n    OnChangeOldPassword(e) { // check old password\n        console.log(e.target.value)\n        var value = e.target.value\n        this.setState({\n            old_password: e.target.value\n        })\n\n        this.CheckOldPass(value)\n    }\n\n\n    OnChangeNewPassword(e) { // new password\n        this.setState({\n            new_password: e.target.value\n        })\n\n    }\n\n    OnChangeConfirmPassword(e) { // confirm password\n        var confirm = e.target.value\n        this.setState({\n            confirm_password: e.target.value\n        })\n\n        if (confirm != this.state.new_password) {\n            this.setState({\n                valid_confirmpassword: true\n            })\n        } else {\n            this.setState({\n                valid_confirmpassword: false,\n                disabled_btn_save: false\n            })\n        }\n\n    }\n\n\n    CheckOldPass(value) {\n        if (value.length >= 8) {\n            CehckOldPassword(value)\n                .then(_Oldpass => {\n                    if (_Oldpass.data.status) {\n                        this.setState({\n                            status_checkold_password: _Oldpass.data.status,\n                            visible_newpass: false\n                        })\n                    } else {\n                        this.setState({\n                            status_checkold_password: _Oldpass.data.status,\n                            visible_newpass: true\n                        })\n                    }\n\n                })\n                .catch(_OldpassError => console.error(_OldpassError))\n        }\n    }\n\n\n    SaveNewPassword() { // Update Password\n        // console.log(this.state.new_password.length) \n        if (this.state.new_password.length < 8) {\n            this.setState({\n                new_password: \"\",\n                confirm_password: \"\",\n                valid_confirmpassword: null\n            })\n\n            message.error({\n                content: word['The password is less than 8 characters.'][this.state.language],\n                className: 'message-alert',\n                // duration: 200,\n                style: {\n                    marginTop: '8vh',\n                },\n            });\n        } else {\n            UpdatePassword(this.state.new_password)\n                .then(_StatusUpdate => {\n                    console.log(\"GFOL\", _StatusUpdate)\n                    if (_StatusUpdate.data.status) {\n\n                        message.success({\n                            content: word['Done'][this.state.language],\n                            className: 'message-done',\n                            // duration: 500,\n                            style: {\n                                marginTop: '2vh',\n                            },\n                        });\n\n                        localStorage.removeItem(\"_Token\")\n                        setTimeout(function () {\n                            window.location.href = \"/password\";\n                        }, 200);\n\n                    } else {\n                        message.error({\n                            content: word['Not Change Password'][this.state.language],\n                            className: 'message-alert',\n                            // duration: 200,\n                            style: {\n                                marginTop: '5vh',\n                            },\n                        });\n                    }\n\n\n                })\n                .catch(_StatusUpdateError => console.error(_StatusUpdateError))\n        }\n    }\n\n\n    render() {\n\n\n\n        // console.log(this.state.status_checkold_password)\n\n        return (\n            <div>\n                <div className=\"size-web\">\n                    <div className=\"cov-menu\">\n                        <div className=\"hmenu\">\n                            <div className=\"icon-back\">\n                                <a href=\"/menu\" className=\"link-back\"><FontAwesomeIcon icon={['fas', 'less-than']} /></a>\n                            </div>\n                            <h1 className=\"hd\">{word['Password Setting'][this.state.language]}</h1>\n                        </div>\n                        <div className=\"box-inputset\">\n                            <div className=\"box-old\">\n                                <div className=\"form-group\">\n                                    <label className=\"la-pass\" htmlFor=\"Oldpass\">{word['Old Password'][this.state.language]}</label>\n                                    <input type=\"text\" maxLength=\"8\" onChange={(e) => { this.OnChangeOldPassword(e) }} value={this.state.old_password} className=\"form-control input-data\" id=\"Oldpass\" />\n                                    <div className={\"color-status \" + (this.state.status_checkold_password == true ? \"green\" : this.state.status_checkold_password == false ? \"red\" : null)}></div>\n                                </div>\n                            </div>\n                            <div className=\"box-new\">\n                                <div className=\"form-group\">\n                                    <label className=\"la-pass\" htmlFor=\"Newpass\">{word['New Password'][this.state.language]}</label>\n                                    <input type=\"text\"\n                                        className=\"form-control input-data\" maxLength=\"8\"\n                                        value={this.state.new_password}\n                                        onChange={(e) => { this.OnChangeNewPassword(e) }} id=\"Newpass\"\n                                        disabled={this.state.visible_newpass}\n                                    />\n\n                                </div>\n                            </div>\n                            <div className=\"box-confirm\">\n                                <div className=\"form-group\">\n                                    <label className=\"la-pass old\" htmlFor=\"Confirm\">{word['Confirm Password'][this.state.language]}</label>\n                                    <input type=\"text\" maxLength=\"8\"\n                                        value={this.state.confirm_password}\n                                        onChange={(e) => { this.OnChangeConfirmPassword(e) }}\n                                        className=\"form-control input-data\" id=\"Confirm\"\n                                        disabled={this.state.visible_newpass}\n                                    />\n                                    <div className={\"color-status \" + (this.state.valid_confirmpassword == true ? \"red\" : this.state.valid_confirmpassword == false ? \"green\" : null)}></div>\n                                </div>\n\n                            </div>\n                            <div className=\"cov-save\">\n                                <button className=\"btn btn-primary btn-save\" onClick={() => { this.SaveNewPassword() }} disabled={this.state.disabled_btn_save}>{word['Save'][this.state.language]}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n\n\n}\n\nexport default SettingPassword"]},"metadata":{},"sourceType":"module"}